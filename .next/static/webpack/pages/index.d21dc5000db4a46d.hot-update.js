"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./pages/propdata.js":
/*!***************************!*\
  !*** ./pages/propdata.js ***!
  \***************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   choices: function() { return /* binding */ choices; },\n/* harmony export */   description: function() { return /* binding */ description; },\n/* harmony export */   endDate: function() { return /* binding */ endDate; },\n/* harmony export */   propTitle: function() { return /* binding */ propTitle; },\n/* harmony export */   startDate: function() { return /* binding */ startDate; }\n/* harmony export */ });\n/*const description = `\r\nDecentralized Autonomous Organizations (DAOs) have emerged as powerful tools for enabling decentralized decision-making and governance across various sectors. One promising application of DAO technology is in the realm of voting systems. By harnessing blockchain technology and smart contracts, we can propose the creation of a voting DAO—a platform designed to facilitate transparent, secure, and tamper-proof voting processes. This voting DAO would offer a decentralized platform for conducting elections, referendums, and decision-making processes, eliminating the need for centralized authorities and mitigating concerns related to fraud, manipulation, and censorship. Through the use of blockchain, each vote would be recorded immutably, ensuring transparency and integrity throughout the voting process. Smart contracts could be employed to automate voting procedures, enforce voting rules, and facilitate the tallying of votes in a transparent manner. Additionally, the voting DAO could incorporate features such as identity verification mechanisms and stakeholder governance models to enhance security and promote democratic participation. Overall, the proposal for building a voting DAO represents a transformative approach to democratizing decision-making processes, empowering individuals, and fostering trust in voting systems. */ const description = \"\\nDecentralized Autonomous Organizations (DAOs) have become powerful tools for decentralized decision-making and governance across various sectors. One notable application of DAO technology is in voting systems. By leveraging blockchain technology and smart contracts, we propose the creation of a voting DAO—a platform designed to facilitate transparent, secure, and tamper-proof voting processes. This voting DAO would serve as a decentralized platform for conducting elections, referendums, and decision-making processes, eliminating the need for centralized authorities and reducing concerns about fraud, manipulation, and censorship. Blockchain technology would ensure each vote is recorded immutably, maintaining transparency and integrity throughout the voting process. Smart contracts could automate voting procedures, enforce rules, and facilitate transparent vote tallying. Furthermore, the voting DAO could include features such as identity verification mechanisms and stakeholder governance models to enhance security and promote democratic participation. Overall, building a voting DAO represents a transformative approach to democratizing decision-making processes, empowering individuals, and fostering trust in voting systems.\\n\";\nconst choices = [\n    \"YES\",\n    \"NO\"\n];\nconst propTitle = \"Community Elections through Blockchaon Soroban\";\nconst startDate = \"May 03 2024\";\nconst endDate = \"June 03 2024\";\n\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWdlcy9wcm9wZGF0YS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBOzR6Q0FDNHpDLEdBRTV6QyxNQUFNQSxjQUFlO0FBSXJCLE1BQU1DLFVBQVU7SUFBQztJQUFPO0NBQUs7QUFDN0IsTUFBTUMsWUFBYTtBQUNuQixNQUFNQyxZQUFhO0FBQ25CLE1BQU1DLFVBQVc7QUFFOEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vcGFnZXMvcHJvcGRhdGEuanM/ZWY3OSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKmNvbnN0IGRlc2NyaXB0aW9uID0gYFxyXG5EZWNlbnRyYWxpemVkIEF1dG9ub21vdXMgT3JnYW5pemF0aW9ucyAoREFPcykgaGF2ZSBlbWVyZ2VkIGFzIHBvd2VyZnVsIHRvb2xzIGZvciBlbmFibGluZyBkZWNlbnRyYWxpemVkIGRlY2lzaW9uLW1ha2luZyBhbmQgZ292ZXJuYW5jZSBhY3Jvc3MgdmFyaW91cyBzZWN0b3JzLiBPbmUgcHJvbWlzaW5nIGFwcGxpY2F0aW9uIG9mIERBTyB0ZWNobm9sb2d5IGlzIGluIHRoZSByZWFsbSBvZiB2b3Rpbmcgc3lzdGVtcy4gQnkgaGFybmVzc2luZyBibG9ja2NoYWluIHRlY2hub2xvZ3kgYW5kIHNtYXJ0IGNvbnRyYWN0cywgd2UgY2FuIHByb3Bvc2UgdGhlIGNyZWF0aW9uIG9mIGEgdm90aW5nIERBT+KAlGEgcGxhdGZvcm0gZGVzaWduZWQgdG8gZmFjaWxpdGF0ZSB0cmFuc3BhcmVudCwgc2VjdXJlLCBhbmQgdGFtcGVyLXByb29mIHZvdGluZyBwcm9jZXNzZXMuIFRoaXMgdm90aW5nIERBTyB3b3VsZCBvZmZlciBhIGRlY2VudHJhbGl6ZWQgcGxhdGZvcm0gZm9yIGNvbmR1Y3RpbmcgZWxlY3Rpb25zLCByZWZlcmVuZHVtcywgYW5kIGRlY2lzaW9uLW1ha2luZyBwcm9jZXNzZXMsIGVsaW1pbmF0aW5nIHRoZSBuZWVkIGZvciBjZW50cmFsaXplZCBhdXRob3JpdGllcyBhbmQgbWl0aWdhdGluZyBjb25jZXJucyByZWxhdGVkIHRvIGZyYXVkLCBtYW5pcHVsYXRpb24sIGFuZCBjZW5zb3JzaGlwLiBUaHJvdWdoIHRoZSB1c2Ugb2YgYmxvY2tjaGFpbiwgZWFjaCB2b3RlIHdvdWxkIGJlIHJlY29yZGVkIGltbXV0YWJseSwgZW5zdXJpbmcgdHJhbnNwYXJlbmN5IGFuZCBpbnRlZ3JpdHkgdGhyb3VnaG91dCB0aGUgdm90aW5nIHByb2Nlc3MuIFNtYXJ0IGNvbnRyYWN0cyBjb3VsZCBiZSBlbXBsb3llZCB0byBhdXRvbWF0ZSB2b3RpbmcgcHJvY2VkdXJlcywgZW5mb3JjZSB2b3RpbmcgcnVsZXMsIGFuZCBmYWNpbGl0YXRlIHRoZSB0YWxseWluZyBvZiB2b3RlcyBpbiBhIHRyYW5zcGFyZW50IG1hbm5lci4gQWRkaXRpb25hbGx5LCB0aGUgdm90aW5nIERBTyBjb3VsZCBpbmNvcnBvcmF0ZSBmZWF0dXJlcyBzdWNoIGFzIGlkZW50aXR5IHZlcmlmaWNhdGlvbiBtZWNoYW5pc21zIGFuZCBzdGFrZWhvbGRlciBnb3Zlcm5hbmNlIG1vZGVscyB0byBlbmhhbmNlIHNlY3VyaXR5IGFuZCBwcm9tb3RlIGRlbW9jcmF0aWMgcGFydGljaXBhdGlvbi4gT3ZlcmFsbCwgdGhlIHByb3Bvc2FsIGZvciBidWlsZGluZyBhIHZvdGluZyBEQU8gcmVwcmVzZW50cyBhIHRyYW5zZm9ybWF0aXZlIGFwcHJvYWNoIHRvIGRlbW9jcmF0aXppbmcgZGVjaXNpb24tbWFraW5nIHByb2Nlc3NlcywgZW1wb3dlcmluZyBpbmRpdmlkdWFscywgYW5kIGZvc3RlcmluZyB0cnVzdCBpbiB2b3Rpbmcgc3lzdGVtcy4gKi9cclxuXHJcbmNvbnN0IGRlc2NyaXB0aW9uID0gYFxyXG5EZWNlbnRyYWxpemVkIEF1dG9ub21vdXMgT3JnYW5pemF0aW9ucyAoREFPcykgaGF2ZSBiZWNvbWUgcG93ZXJmdWwgdG9vbHMgZm9yIGRlY2VudHJhbGl6ZWQgZGVjaXNpb24tbWFraW5nIGFuZCBnb3Zlcm5hbmNlIGFjcm9zcyB2YXJpb3VzIHNlY3RvcnMuIE9uZSBub3RhYmxlIGFwcGxpY2F0aW9uIG9mIERBTyB0ZWNobm9sb2d5IGlzIGluIHZvdGluZyBzeXN0ZW1zLiBCeSBsZXZlcmFnaW5nIGJsb2NrY2hhaW4gdGVjaG5vbG9neSBhbmQgc21hcnQgY29udHJhY3RzLCB3ZSBwcm9wb3NlIHRoZSBjcmVhdGlvbiBvZiBhIHZvdGluZyBEQU/igJRhIHBsYXRmb3JtIGRlc2lnbmVkIHRvIGZhY2lsaXRhdGUgdHJhbnNwYXJlbnQsIHNlY3VyZSwgYW5kIHRhbXBlci1wcm9vZiB2b3RpbmcgcHJvY2Vzc2VzLiBUaGlzIHZvdGluZyBEQU8gd291bGQgc2VydmUgYXMgYSBkZWNlbnRyYWxpemVkIHBsYXRmb3JtIGZvciBjb25kdWN0aW5nIGVsZWN0aW9ucywgcmVmZXJlbmR1bXMsIGFuZCBkZWNpc2lvbi1tYWtpbmcgcHJvY2Vzc2VzLCBlbGltaW5hdGluZyB0aGUgbmVlZCBmb3IgY2VudHJhbGl6ZWQgYXV0aG9yaXRpZXMgYW5kIHJlZHVjaW5nIGNvbmNlcm5zIGFib3V0IGZyYXVkLCBtYW5pcHVsYXRpb24sIGFuZCBjZW5zb3JzaGlwLiBCbG9ja2NoYWluIHRlY2hub2xvZ3kgd291bGQgZW5zdXJlIGVhY2ggdm90ZSBpcyByZWNvcmRlZCBpbW11dGFibHksIG1haW50YWluaW5nIHRyYW5zcGFyZW5jeSBhbmQgaW50ZWdyaXR5IHRocm91Z2hvdXQgdGhlIHZvdGluZyBwcm9jZXNzLiBTbWFydCBjb250cmFjdHMgY291bGQgYXV0b21hdGUgdm90aW5nIHByb2NlZHVyZXMsIGVuZm9yY2UgcnVsZXMsIGFuZCBmYWNpbGl0YXRlIHRyYW5zcGFyZW50IHZvdGUgdGFsbHlpbmcuIEZ1cnRoZXJtb3JlLCB0aGUgdm90aW5nIERBTyBjb3VsZCBpbmNsdWRlIGZlYXR1cmVzIHN1Y2ggYXMgaWRlbnRpdHkgdmVyaWZpY2F0aW9uIG1lY2hhbmlzbXMgYW5kIHN0YWtlaG9sZGVyIGdvdmVybmFuY2UgbW9kZWxzIHRvIGVuaGFuY2Ugc2VjdXJpdHkgYW5kIHByb21vdGUgZGVtb2NyYXRpYyBwYXJ0aWNpcGF0aW9uLiBPdmVyYWxsLCBidWlsZGluZyBhIHZvdGluZyBEQU8gcmVwcmVzZW50cyBhIHRyYW5zZm9ybWF0aXZlIGFwcHJvYWNoIHRvIGRlbW9jcmF0aXppbmcgZGVjaXNpb24tbWFraW5nIHByb2Nlc3NlcywgZW1wb3dlcmluZyBpbmRpdmlkdWFscywgYW5kIGZvc3RlcmluZyB0cnVzdCBpbiB2b3Rpbmcgc3lzdGVtcy5cclxuYFxyXG5cclxuY29uc3QgY2hvaWNlcyA9IFtcIllFU1wiLCBcIk5PXCJdXHJcbmNvbnN0IHByb3BUaXRsZSA9IGBDb21tdW5pdHkgRWxlY3Rpb25zIHRocm91Z2ggQmxvY2tjaGFvbiBTb3JvYmFuYFxyXG5jb25zdCBzdGFydERhdGUgPSBgTWF5IDAzIDIwMjRgXHJcbmNvbnN0IGVuZERhdGUgPSBgSnVuZSAwMyAyMDI0YFxyXG5cclxuZXhwb3J0IHsgZGVzY3JpcHRpb24sIHByb3BUaXRsZSwgc3RhcnREYXRlLCBlbmREYXRlLCBjaG9pY2VzIH07Il0sIm5hbWVzIjpbImRlc2NyaXB0aW9uIiwiY2hvaWNlcyIsInByb3BUaXRsZSIsInN0YXJ0RGF0ZSIsImVuZERhdGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./pages/propdata.js\n"));

/***/ })

});